[{"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/index.tsx":"1","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/App.tsx":"2","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/wrapper/index.tsx":"3","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/summary/index.tsx":"4","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/loading/index.tsx":"5","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/auth.tsx":"6","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/app.ts":"7","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/main/index.tsx":"8","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/login/index.tsx":"9","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/profile/index.tsx":"10","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/summary.ts":"11","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/register/index.tsx":"12","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/stats.tsx":"13","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/summary.tsx":"14","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/game.tsx":"15","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/app.tsx":"16","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/context.ts":"17","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/button/index.tsx":"18","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/logo/index.tsx":"19","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/stats.ts":"20","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/game.ts":"21","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/index.ts":"22","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/auth.ts":"23","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/stats.ts":"24","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/provider.tsx":"25","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/radio/index.tsx":"26","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/input/index.tsx":"27","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/timer/index.tsx":"28","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/game/index.tsx":"29","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/navbar/index.tsx":"30","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/enums.ts":"31","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/fn.ts":"32","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/types.ts":"33","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/index.ts":"34","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/row/index.tsx":"35","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/cell/index.tsx":"36","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/email.ts":"37","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/localization/index.ts":"38","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/localization/languages/en.ts":"39","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/localization/languages/uk.ts":"40","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/lang-switcher/index.tsx":"41","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/lang.ts":"42","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/onboarding/index.tsx":"43"},{"size":444,"mtime":1648755998175,"results":"44","hashOfConfig":"45"},{"size":1489,"mtime":1648892128464,"results":"46","hashOfConfig":"45"},{"size":530,"mtime":1648755831967,"results":"47","hashOfConfig":"45"},{"size":1758,"mtime":1648899185532,"results":"48","hashOfConfig":"45"},{"size":986,"mtime":1648662211039,"results":"49","hashOfConfig":"45"},{"size":472,"mtime":1648487560444,"results":"50","hashOfConfig":"45"},{"size":453,"mtime":1648889358227,"results":"51","hashOfConfig":"45"},{"size":5512,"mtime":1648892305523,"results":"52","hashOfConfig":"45"},{"size":3775,"mtime":1648890883860,"results":"53","hashOfConfig":"45"},{"size":2722,"mtime":1648894891696,"results":"54","hashOfConfig":"45"},{"size":287,"mtime":1648656273567,"results":"55","hashOfConfig":"45"},{"size":3753,"mtime":1648892631894,"results":"56","hashOfConfig":"45"},{"size":329,"mtime":1648400993180,"results":"57","hashOfConfig":"45"},{"size":343,"mtime":1648656318339,"results":"58","hashOfConfig":"45"},{"size":322,"mtime":1648481329761,"results":"59","hashOfConfig":"45"},{"size":315,"mtime":1648394937299,"results":"60","hashOfConfig":"45"},{"size":397,"mtime":1648567118256,"results":"61","hashOfConfig":"45"},{"size":895,"mtime":1648891785621,"results":"62","hashOfConfig":"45"},{"size":244,"mtime":1648654094926,"results":"63","hashOfConfig":"45"},{"size":332,"mtime":1648566996110,"results":"64","hashOfConfig":"45"},{"size":601,"mtime":1648723063685,"results":"65","hashOfConfig":"45"},{"size":71,"mtime":1648566825063,"results":"66","hashOfConfig":"45"},{"size":616,"mtime":1648739948920,"results":"67","hashOfConfig":"45"},{"size":463,"mtime":1648712920280,"results":"68","hashOfConfig":"45"},{"size":607,"mtime":1648567150753,"results":"69","hashOfConfig":"45"},{"size":1519,"mtime":1648750974885,"results":"70","hashOfConfig":"45"},{"size":842,"mtime":1648658195091,"results":"71","hashOfConfig":"45"},{"size":849,"mtime":1648666559693,"results":"72","hashOfConfig":"45"},{"size":6041,"mtime":1648897868119,"results":"73","hashOfConfig":"45"},{"size":772,"mtime":1648757209966,"results":"74","hashOfConfig":"45"},{"size":221,"mtime":1648755983666,"results":"75","hashOfConfig":"45"},{"size":101,"mtime":1648889459335,"results":"76","hashOfConfig":"45"},{"size":1509,"mtime":1648889343643,"results":"77","hashOfConfig":"45"},{"size":387,"mtime":1648713106295,"results":"78","hashOfConfig":"45"},{"size":439,"mtime":1648578063649,"results":"79","hashOfConfig":"45"},{"size":1444,"mtime":1648740953468,"results":"80","hashOfConfig":"45"},{"size":277,"mtime":1648741215445,"results":"81","hashOfConfig":"45"},{"size":438,"mtime":1648756037699,"results":"82","hashOfConfig":"45"},{"size":1938,"mtime":1648897703849,"results":"83","hashOfConfig":"45"},{"size":2425,"mtime":1648897694154,"results":"84","hashOfConfig":"45"},{"size":1828,"mtime":1648896510926,"results":"85","hashOfConfig":"45"},{"size":343,"mtime":1648892414466,"results":"86","hashOfConfig":"45"},{"size":1320,"mtime":1648898018713,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"cfrtk2",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"91"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"91"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"91"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"91"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"91"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"91"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/index.tsx",[],[],["231","232"],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/App.tsx",["233"],[],"import React, { Fragment, lazy, Suspense, useEffect } from 'react';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Navigate\n} from \"react-router-dom\";\nimport Loading from './components/loading';\n\nimport AppContext from './store/context/app';\nimport Auth from './views/auth';\n\nconst Register = lazy(() => import('./views/register'));\nconst Profile = lazy(() => import('./views/profile'));\nconst Login = lazy(() => import('./views/login'));\nconst Main = lazy(() => import('./views/main'));\n\nconst App = () => {\n  const { data: { token } } = AppContext.useContext();\n\n  useEffect(() => {\n    if (token) localStorage.setItem('AuthToken', token);\n  }, [token]);\n\n  window.addEventListener('beforeunload', (event) => {\n    localStorage.removeItem('AuthToken');\n  });\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<Loading isLoading />}>\n        <Routes>\n          <Route path='/main' element={\n            <Auth>\n              <Main />\n            </Auth>\n          } />\n\n          <Route path='/profile' element={\n            <Auth>\n              <Profile />\n            </Auth>\n          } />\n\n          <Route path='/register' element={<Register />} />\n          <Route path='/login' element={<Login />} />\n\n          <Route path='/' element={<Navigate replace to={localStorage.getItem('AuthToken') ? '/login' : '/main'} />} />\n\n          <Route path='*' element={<h1>Page not Found!!</h1>} />\n        </Routes>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/wrapper/index.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/summary/index.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/loading/index.tsx",["234","235"],[],"import React, { FC  } from 'react'\nimport AppContext from '../../store/context/app';\n\nimport Transition from 'react-transition-group/Transition';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\n\n\nimport Logo from '../logo';\n\nimport './loading.scss';\n\nconst duration = 300;\n\ntype LoadingProps = {\n  isLoading?: boolean;\n}\nconst Loading: FC<LoadingProps> = ({ isLoading }) => {\n  const { data: { isLoading: isAppLoading } } = AppContext.useContext();\n\n  // if (!isLoading && !isAppLoading) return null;\n\n  // if (isLoading || isAppLoading) {\n    return (\n      <CSSTransition\n      in={isLoading || isAppLoading}\n      timeout={duration}\n      classNames='loading'\n      mountOnEnter\n      unmountOnExit\n      >\n          {state => (\n            <div className=\"loading\">\n              <div className=\"loading__overlay\">\n                <Logo />\n              </div>\n            </div>\n          )}\n      </CSSTransition>\n    )\n  // }\n};\n\nexport default Loading;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/auth.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/app.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/main/index.tsx",["236","237"],["238"],"import { ChangeEvent, useEffect, useState, VFC } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport AuthService from \"../../api/services/auth\";\n\nimport { Difficulty, Size } from \"../../utils\";\n\nimport Button from \"../../components/button\";\nimport Input from \"../../components/input\";\nimport Navigation from \"../../components/navbar\";\nimport Radio from \"../../components/radio\";\nimport Timer from \"../../components/timer\";\n\nimport AppContext from \"../../store/context/app\";\nimport GameContext from \"../../store/context/game\";\nimport StatsContext from \"../../store/context/stats\";\n\nimport Game from \"../game\";\n\nimport './main.scss';\nimport SummaryContext from \"../../store/context/summary\";\nimport { useTranslation } from \"react-i18next\";\n\nconst startSets: Size[] = [\n  { width: 6, height: 6 },\n  { width: 7, height: 7 },\n  { width: 8, height: 8 },\n  { width: 9, height: 9 },\n  { width: 10, height: 10 },\n  { width: 6, height: 7 },\n  { width: 7, height: 8 },\n  { width: 8, height: 9 },\n  { width: 9, height: 10 }\n];\n\nconst createSetsButtons = (set: Size[]) => {\n  return set.map((item, index) => ({\n    label: `${item.width}x${item.height}`,\n    value: index\n  }));\n}\n\nconst Main: VFC = () => {\n  const { data: {\n    user: { _id: id, name },\n    token,\n    difficulty\n  }, setData: setAppData } = AppContext.useContext();\n  const { setData: setStatsData } = StatsContext.useContext();\n  const { setData: setGameData } = GameContext.useContext();\n  const { setData: setSummaryData } = SummaryContext.useContext();\n\n  const [isStarted, setIsStarted] = useState(false);\n  const [isFinished, setIsFinished] = useState(false);\n  const [fieldSize, setFieldSize] = useState(0);\n\n  const { t, i18n } = useTranslation();\n\n  const onDifficultyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setAppData({ difficulty: event.target.value });\n  }\n\n  const onFieldSizeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setFieldSize(Number(event.target.value));\n  }\n\n  const onFinishGame = () => {\n    setIsFinished(true);\n    setIsStarted(false);\n  }\n\n  const onStartGame = () => {\n\n    // if ((!width || !height) ||\n    //   (Number(width) < 4 || Number(height) < 4) ||\n    //   (Number(width) > 10 || Number(height) > 10)\n    // ) {\n    //   return setSummaryData({\n    //     isShow: true,\n    //     isSuccess: false,\n    //     title: 'Field is invalid!',\n    //     subtitle: 'Enter field width and height minimum 4 and maximum 10'\n    //   });\n    // }\n\n    const createDisabledCell = (rows: number, columns: number): number[] => {\n      return [\n        Math.floor(Math.random() * (rows - 1)),\n        Math.floor(Math.random() * (columns - 1))\n      ];\n    }\n\n    const disabledCells: number[][] = difficulty === Difficulty.hard ?\n      [\n        createDisabledCell(startSets[fieldSize].width, startSets[fieldSize].height),\n        createDisabledCell(startSets[fieldSize].width, startSets[fieldSize].height)\n      ] :\n      [\n        [0, 0],\n        [1, 0]\n      ];\n\n    setGameData({ fieldSize: startSets[fieldSize], disabledCells });\n\n    setIsStarted(true);\n  }\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userId = id || localStorage.getItem('userId');\n\n    AuthService.getUser(userId!)\n      .then(res => {\n        const { user, stats } = res.data;\n\n        setAppData({ user });\n        setStatsData({ ...stats });\n\n        i18n.changeLanguage(user.language || 'en');\n      })\n      .catch((err) => {\n        navigate('/login');\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, token]);\n\n  return (\n    <main className='main__container container'>\n      <Navigation />\n\n\n      <section className='main__content'>\n        {isStarted ? (\n          <section className=\"main__game\">\n            <Timer isTicking={!isFinished} />\n            <Game onFinish={onFinishGame} />\n            <Button view='primary' fullWidth onClick={onFinishGame}>\n              {t('game.finishGame')}\n            </Button>\n          </section>\n        ) : (\n          <section className='main__menu'>\n            <h1 className='main__menu--title'>\n              <span>{t('pages.main.title')}</span>\n              <br />\n              {name}\n            </h1>\n\n            <h4 className='main__menu--subtitle'>{t('pages.main.start')}</h4>\n\n            <section className='main__menu--field-inputs'>\n              <Radio\n                label={t('pages.main.fieldSize.title')}\n                value={fieldSize}\n                items={createSetsButtons(startSets)}\n                inputProps={{ onChange: onFieldSizeChange }}\n              />\n\n              <Radio\n                label={t('pages.main.difficulty.title')}\n                value={difficulty}\n                items={[\n                  {\n                    value: Difficulty.easy,\n                    label: t('pages.main.difficulty.easy'),\n                  },\n                  {\n                    value: Difficulty.middle,\n                    label: t('pages.main.difficulty.middle'),\n                  },\n                  {\n                    value: Difficulty.hard,\n                    label: t('pages.main.difficulty.hard'),\n                  },\n                ]}\n                inputProps={{ onChange: onDifficultyChange }}\n              />\n            </section>\n\n            <Button view='primary' fullWidth onClick={onStartGame}>\n              {t('pages.main.submit')}\n            </Button>\n          </section>\n        )}\n      </section>\n    </main>\n  )\n};\n\nexport default Main;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/login/index.tsx",["239","240"],[],"import React, { ChangeEvent, FormEvent, useEffect, useState, VFC } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport AuthService from '../../api/services/auth';\n\nimport AppContext from '../../store/context/app';\n\nimport Button from '../../components/button';\nimport Input from '../../components/input';\n\nimport Logo from '../../components/logo';\n\nimport './login.scss';\nimport SummaryContext from '../../store/context/summary';\nimport { useTranslation } from 'react-i18next';\nimport { Locales } from '../../utils';\nimport LanguageSwitcher from '../../components/lang-switcher';\n\nconst Login: VFC = () => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [loginError, setLoginError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const { data: { isLoading, language }, setData: setAppData } = AppContext.useContext();\n  const { setData: setSummaryData } = SummaryContext.useContext();\n\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const onLoginChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value);\n    setLoginError('');\n  }\n  const onPasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n    setPasswordError('');\n  }\n\n  const onSubmit = (event: FormEvent) => {\n    if (event) event.preventDefault();\n\n    if (!login) return setLoginError(t('pages.login.inputs.login.placeholder'));\n    if (!password) return setPasswordError(t('pages.login.inputs.password.placeholder'));\n\n    setAppData({ isLoading: true });\n\n    AuthService.login({\n      email: login,\n      password: password\n    })\n      .then(res => {\n        const { token, user } = res.data;\n\n        setAppData({ user, token });\n\n        localStorage.setItem('userId', user._id!);\n        localStorage.setItem('AuthToken', token);\n      })\n      .then(() => navigate('/main'))\n      .catch(err => {\n        console.log(err.response.message);\n\n        setPassword('');\n        setLogin('');\n\n        setSummaryData({\n          isShow: true,\n          isSuccess: false,\n          title: t('popup.fail.title') as string,\n          subtitle: err.response.data.message\n        });\n      })\n      .finally(() => setAppData({ isLoading: false }));\n  }\n\n  useEffect(() => {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('AuthToken');\n  }, []);\n\n  return (\n    <section className=\"login__container container\">\n      <section className=\"login__content\">\n        <Logo />\n\n        <h2 className='login__title'>{t('pages.login.title')}</h2>\n\n        <section className='login__register'>\n          <span>{t('pages.login.subtitle.text')}&nbsp;</span>\n          <Link className='login__register--link' to='/register'>{t('pages.login.subtitle.link')}</Link>\n        </section>\n\n\n        <form onSubmit={onSubmit} className='login__form'>\n          <LanguageSwitcher />\n\n          <section className='login__inputs'>\n            <Input\n              name='email'\n              placeholder={t('pages.login.inputs.login.placeholder')}\n              value={login}\n              onChange={onLoginChange}\n              errorMessage={loginError}\n            />\n            <Input\n              name='password'\n              placeholder={t('pages.login.inputs.password.placeholder')}\n              value={password}\n              onChange={onPasswordChange}\n              errorMessage={passwordError}\n            />\n          </section>\n\n          <section>\n            <Button view='primary' fullWidth type='submit' disabled={isLoading}>\n              {t('pages.login.inputs.submit')}\n            </Button>\n          </section>\n\n        </form>\n\n      </section>\n    </section>\n  )\n};\n\nexport default Login;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/profile/index.tsx",["241","242","243"],["244"],"import { memo, useEffect, useState, VFC } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport StatsService from \"../../api/services/stats\";\n\nimport { StatsStore } from \"../../utils\";\n\nimport AppContext from \"../../store/context/app\";\nimport StatsContext from \"../../store/context/stats\";\n\nimport Navigation from \"../../components/navbar\";\n\nimport './profile.scss';\nimport { useTranslation } from \"react-i18next\";\nimport LanguageSwitcher from \"../../components/lang-switcher\";\n\nconst Profile: VFC = () => {\n  const { data: { user: { _id: id }, token } } = AppContext.useContext();\n\n  const { data, data: {\n    totalGames,\n    moves,\n    bestGame\n  }, setData: setStatsData } = StatsContext.useContext();\n\n  const [stats, setStats] = useState<StatsStore>(data);\n\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const userId = id || localStorage.getItem('userId');\n    const authToken = token || localStorage.getItem('AuthToken')\n\n    if (!userId && !authToken) navigate('/login');\n\n    StatsService.get(userId!)\n      .then((res) => {\n        setStatsData(res.data);\n        setStats(res.data);\n      })\n      .catch((err) => {\n        navigate('/login');\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  useEffect(() => {\n    setStats(data);\n  }, [data]);\n\n  return (\n    <main className='profile__container container'>\n      <Navigation />\n\n      <section className='profile__content'>\n        <h1 className='profile__title'>{t('pages.profile.title')}</h1>\n\n        <h3 className='profile__subtitle'>{t('pages.profile.subtitle')}</h3>\n\n        <article className='profile__stats-item'>\n          <h4 className='profile__stats-item_title'>{t('pages.profile.totalGames')} </h4>\n          <p>{stats.totalGames}</p>\n        </article>\n\n        <article className='profile__stats-item'>\n          <h4 className='profile__stats-item_title'>{t('pages.profile.lastGame.title')}</h4>\n\n          {/* <article>\n            <h5 className='profile__stats-item_subtitle'>Time: </h5>\n            <p>{stats.bestGame.time}</p>\n          </article> */}\n\n          <article className='profile__stats-subitem'>\n            <h5 className='profile__stats-item_subtitle'>{t('pages.profile.lastGame.moves')}</h5>\n            <p>{stats.moves}</p>\n          </article>\n\n          <article className='profile__stats-subitem'>\n            <h5 className='profile__stats-item_subtitle'>{t('pages.profile.lastGame.field')} </h5>\n            <p>{stats.bestGame.field.width} x {stats.bestGame.field.height}</p>\n          </article>\n        </article>\n\n        <LanguageSwitcher sendToServer/>\n      </section>\n    </main>\n  );\n};\n\nexport default memo(Profile);","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/summary.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/register/index.tsx",["245"],[],"import React, { ChangeEvent, FormEvent, useRef, useState, VFC } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport AuthService from '../../api/services/auth';\n\nimport AppContext from '../../store/context/app';\n\nimport Input from './../../components/input';\nimport Button from './../../components/button';\nimport Logo from '../../components/logo';\n\nimport './register.scss';\nimport { useTranslation } from 'react-i18next';\nimport LanguageSwitcher from '../../components/lang-switcher';\n\nconst Register: VFC = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const { data: { isLoading, language }, setData: setAppData } = AppContext.useContext();\n\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const onNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setNameError('');\n  }\n\n  const onEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setEmailError('');\n  }\n\n  const onPasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n    setPasswordError('');\n  }\n\n  const onSubmit = (event: FormEvent) => {\n    if (event) event.preventDefault();\n\n    if (!name) return setNameError(t('pages.register.inputs.name.placeholder'));\n    if (!email) return setEmailError(t('pages.register.inputs.email.placeholder'));\n    if (!password) return setPasswordError(t('pages.register.inputs.password.placeholder'));\n\n    setAppData({ isLoading: true });\n\n    AuthService.register({\n      name: name!,\n      email: email!,\n      password: password!,\n      language\n    })\n      .then(res => {\n        const { token, user } = res.data;\n\n        setAppData({\n          user,\n          token\n        });\n      })\n      .then(() => navigate('/login'))\n      .catch(err => {\n        console.log(err);\n\n      })\n      .finally(() => setAppData({ isLoading: false }));\n  }\n  return (\n    <section className=\"register__container container\">\n      <section className=\"register__content\">\n        <Logo />\n\n        <h2 className='register__title'>{t('pages.register.title')}</h2>\n\n        <section className='register__login'>\n          {t('pages.register.subtitle.text')}&nbsp;\n          <Link className='register__login--link' to='/login'>{t('pages.register.subtitle.link')}</Link>\n        </section>\n\n        <form onSubmit={onSubmit} className='register__form'>\n          <LanguageSwitcher />\n\n          <section className='register__inputs'>\n            <Input\n              name='name'\n              placeholder={t('pages.register.inputs.name.placeholder')}\n              value={name}\n              onChange={onNameChange}\n              errorMessage={nameError}\n            />\n\n            <Input\n              name='email'\n              placeholder={t('pages.register.inputs.email.placeholder')}\n              value={email}\n              onChange={onEmailChange}\n              errorMessage={emailError}\n            />\n\n            <Input\n              name='password'\n              placeholder={t('pages.register.inputs.password.placeholder')}\n              value={password}\n              onChange={onPasswordChange}\n              errorMessage={passwordError}\n            />\n          </section>\n\n          <Button view='primary' fullWidth disabled={isLoading}>\n            {t('pages.register.inputs.submit')}\n          </Button>\n        </form>\n\n      </section>\n    </section>\n  )\n};\n\nexport default Register;\n","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/stats.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/summary.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/game.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/app.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/context.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/button/index.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/logo/index.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/stats.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/context/game.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/index.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/auth.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/stats.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/store/provider/provider.tsx",[],["246"],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/radio/index.tsx",["247","248"],[],"import React, { ComponentProps } from 'react';\nimport classNames from 'classnames';\n\nimport './radio.scss';\n\nexport type RadioProps = {\n  name?: string;\n  items: { value: string | number; label: string }[];\n  value?: string | number | null;\n  label?: string;\n  className?: string;\n  inputProps?: ComponentProps<'input'>;\n};\n\nconst Radio = ({\n  items,\n  label,\n  inputProps,\n  className,\n  value\n}: RadioProps) => {\n  const classes = classNames('radio', className, {\n  });\n\n  const radioContainerClasses = (itemValue: string) => classNames('radio__container text', {\n    radio__container_active: value == itemValue,\n    radio__container_disabled: inputProps?.disabled\n  });\n\n  return (\n    <div className={classes}>\n      {label && <label className=\"radio__label label\">{label}</label>}\n      <div className=\"radio__inputs-wrapper\">\n        {items.map(({ label: itemLabel, value: itemValue }, index) => (\n          <label\n            key={index}\n            className={radioContainerClasses(itemValue.toString())}\n          >\n            {itemLabel}\n            <input\n              {...inputProps}\n              className=\"radio__input\"\n              type=\"radio\"\n              checked={value == itemValue}\n              value={itemValue}\n            />\n            <span\n              className={classNames('radio__checkmark', {\n                radio__checkmark_disabled: inputProps?.disabled\n              })}\n            ></span>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Radio;\n","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/input/index.tsx",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/timer/index.tsx",[],["249"],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/views/game/index.tsx",["250","251","252","253","254","255","256"],[],"import { useCallback, useEffect, FC, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthService from \"../../api/services/auth\";\nimport EmailService from \"../../api/services/email\";\nimport StatsService from \"../../api/services/stats\";\nimport Button from \"../../components/button\";\nimport Onboarding from \"../../components/onboarding\";\n\nimport Row from \"../../components/row\";\nimport AppContext from \"../../store/context/app\";\n\nimport GameContext from \"../../store/context/game\";\nimport StatsContext from \"../../store/context/stats\";\nimport SummaryContext from \"../../store/context/summary\";\nimport { Try } from \"../../utils\";\n\nimport './game.scss';\n\nexport const checkRow = (content: string, row: number, column: number, field: string[][], lastTry: Try): boolean => {\n  let isAllowedToGo = true;\n\n  if (lastTry.row != undefined && lastTry.column != undefined) {\n    const deltaX = Math.abs(column - lastTry.column);\n    const deltaY = Math.abs(row - lastTry.row);\n\n    isAllowedToGo = Number(content) === 0 && (\n      ((deltaX === 2) && (deltaY === 1)) ||\n      ((deltaX === 1) && (deltaY === 2)));\n  }\n\n  return isAllowedToGo;\n}\n\nconst arraysEqual = (a1: number[],a2: number[]) => {\n  /* WARNING: arrays must not contain {objects} or behavior may be undefined */\n  return JSON.stringify(a1) == JSON.stringify(a2);\n}\n\nconst getTotalAvaliableMoves = (field: string[][], row: number, column: number, disabledCells: number[][]): number => {\n  const avaliableMoves = [\n    [2, 1],\n    [2, -1],\n    [-2, 1],\n    [-2, -1],\n\n    [1, 2],\n    [-1, 2],\n    [1, -2],\n    [-1, -2],\n  ];\n\n  let totalMoves = 0;\n\n  avaliableMoves.forEach(([moveRows, moveColumns]) => {\n    const newRow = row! + moveRows;\n    const newColumn = column! + moveColumns;\n\n    if (\n      (newRow >= 0 && newRow < field.length) &&\n      (newColumn >= 0 && newColumn < field[0].length) &&\n      disabledCells.every(cell => !arraysEqual([newRow, newColumn], cell))\n    ) {\n      if (field[newRow][newColumn] === '') totalMoves++;\n    }\n  });\n\n  return totalMoves;\n}\n\nconst checkWin = (field: string[][]): boolean => {\n  const LeftZeroes = field.reduce((acc, curr) => acc + curr.filter(el => el === '').length , 0);\n\n  return LeftZeroes === 0;\n}\n\ntype GameProps = {\n  onFinish: () => void\n}\nconst Game: FC<GameProps> = ({ onFinish }) => {\n  const { data: {\n    fieldSize,\n    field,\n    time,\n    disabledCells,\n    lastTry,\n    previousTry,\n    isCancelAvailable,\n    lastTryField,\n  }, setData: setGameData } = GameContext.useContext();\n  const { data: { user: { _id: id } }, setData: setAppData } = AppContext.useContext();\n  const { setData: setStatsData } = StatsContext.useContext();\n  const { setData: setSummaryData } = SummaryContext.useContext();\n\n  const [isTutorialShow, setIsTutrialShow] = useState(false);\n\n  const { t } = useTranslation();\n\n  const cancelMove = () => {\n    const newField = field.slice();\n\n    newField[lastTry.row!][lastTry.column!] = '';\n\n    setGameData({\n      lastTry: previousTry,\n      field: newField,\n      isCancelAvailable: false\n    });\n  }\n\n  const onCellClick = async (row: number, column: number, field: string[][], lastTry: Try) => {\n    setGameData({\n      lastTryField: field,\n      previousTry: lastTry,\n      isCancelAvailable: true\n    });\n\n    const fieldCopy = field.slice();\n\n    const nextNumber = (lastTry?.number) ?\n      Number(fieldCopy[lastTry.row!][lastTry.column!]) + 1 :\n      1;\n\n    fieldCopy[row][column] = nextNumber.toString();\n\n    setGameData({\n      field: fieldCopy,\n      lastTry: {\n        row,\n        column,\n        number: nextNumber,\n        moves: lastTry.moves + 1\n      }\n    });\n\n    const availableMoves = getTotalAvaliableMoves(fieldCopy, row, column, disabledCells);\n\n    if (availableMoves === 0) {\n      const isWin = checkWin(field);\n      await setSummaryData(({\n        isShow: true,\n        isSuccess: isWin,\n        title: isWin ?\n          t('popup.success.title') as string :\n          t('popup.fail.title') as string,\n        subtitle: isWin ?\n          t('popup.succes.subtitle') as string :\n          t('popup.fail.subtitle') as string\n      }));\n\n      if (isWin) EmailService.sendEmail({ text: 'user field: ', field });\n\n      onFinish();\n\n      setGameData({\n        lastTry: {\n          row: null,\n          column: null,\n          number: 0,\n          moves: 0,\n        },\n      });\n\n      setAppData({ isLoading: true });\n\n      await StatsService.update(id!, {\n        moves: lastTry.moves + 1,\n        bestGame: {\n          time,\n          field: {\n            width: field[0].length,\n            height: field.length\n          }\n        }\n      })\n        .then(res => {\n          const { data } = res;\n          console.log(data);\n          setStatsData(data);\n        })\n        .finally(() => setAppData({ isLoading: false }));\n    }\n  };\n\n  useEffect(() => {\n    const field = Array(fieldSize.height).fill('').map(() => Array(fieldSize.width).fill(''));\n\n    if (disabledCells) {\n      disabledCells.forEach(([row, column]) => {\n        field[row][column] = 'X';\n      });\n\n    }\n\n    setGameData({\n      field,\n      onCellClick,\n      lastTry: {\n        row: null,\n        column: null,\n        number: 0,\n        moves: 0,\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    setGameData({ onCellClick });\n  }, [fieldSize, disabledCells]);\n\n  const rows = useMemo(() => field.map((row, index) => (\n    <Row key={`row${index}`} content={row} number={index} />)), [field, lastTryField, lastTry]);\n\n  return (\n    <section>\n      <div className='game__cancel-move'>\n        <Button view='secondary' fullWidth onClick={cancelMove} disabled={!isCancelAvailable}>\n          {t('game.cancelMove')}\n        </Button>\n        <Button view='secondary' fullWidth onClick={() => setIsTutrialShow(true)}>\n          {t('game.tutorial')}\n        </Button>\n      </div>\n      {rows}\n        <Onboarding isShow={isTutorialShow} onClose={() => setIsTutrialShow(false)} />\n    </section>\n  )\n};\n\nexport default Game;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/navbar/index.tsx",["257"],[],"import React, { FC } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from \"react-i18next\";\n\nimport Logo from '../logo';\n\nimport LogoMini from './logo-mini.svg';\n\nimport './navbar.scss';\n\nconst Navigation: FC = () => {\n  const { t } = useTranslation();\n  return (\n    <section className='navbar'>\n      <div className=\"navbar__logo\">\n        <img src={LogoMini} alt=\"ZigZag\" />\n      </div>\n      <nav className='navbar__links'>\n        <Link className='navbar__link' to='/main'>{t('menu.main.title')}</Link>\n        <Link className='navbar__link' to='/profile'>{t('menu.profile.title')}</Link>\n        <Link className='navbar__link' to='/login'>{t('menu.logout.title')}</Link>\n      </nav>\n    </section>\n  );\n};\n\nexport default Navigation;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/enums.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/fn.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/utils/types.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/index.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/row/index.tsx",["258"],[],"import { FC, useMemo } from \"react\";\n\nimport Cell from \"../cell\";\n\nimport './row.scss';\n\ntype RowProps = {\n  content: string[];\n  number: number;\n};\n\nconst Row: FC<RowProps> = ({ content, number }) => {\n  const cells = content.map((item, index) => (\n    <Cell key={item + index} row={number} column={index} content={item} />\n  ));\n\n  return (\n    <section className='row__container'>\n      {cells}\n    </section>\n  )\n}\n\nexport default Row;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/cell/index.tsx",["259","260","261","262","263"],[],"import { FC, useCallback, useEffect, useState } from \"react\";\nimport classnames from 'classnames';\nimport { CSSTransition, Transition } from 'react-transition-group';\n\nimport GameContext from \"../../store/context/game\";\n\nimport './cell.scss';\nimport { checkRow } from \"../../views/game\";\nimport AppContext from \"../../store/context/app\";\nimport { Difficulty } from \"../../utils\";\n\ntype CellProps = {\n  content: string;\n  column: number;\n  row: number;\n};\n\nconst Cell: FC<CellProps> = ({ content, row, column }) => {\n  const { data: { onCellClick, field, lastTry, disabledCells } } = GameContext.useContext();\n  const { data: { difficulty } } = AppContext.useContext();\n\n  const isDisabledCell = disabledCells.map(cell => {\n    return cell[0] === row && cell[1] === column\n  }).some(condition => condition);\n\n  const isAllowedToGo = !isDisabledCell && checkRow(content, row, column, field, lastTry);\n\n  return (\n    <div\n      className={classnames('cell__container', {\n        'cell__disabled': isDisabledCell && content === 'X',\n        'cell__available': !isDisabledCell && difficulty === Difficulty.easy && isAllowedToGo,\n        'cell__filled': !isDisabledCell && Number(content) !== 0,\n        'cell__last-try': row === lastTry.row && column === lastTry.column\n      })}\n      onClick={() => isAllowedToGo ? onCellClick(row, column, field, lastTry) : {}}\n    >\n      {isDisabledCell ? 'X' : content}\n    </div>\n  )\n};\n\nexport default Cell;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/email.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/localization/index.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/localization/languages/en.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/localization/languages/uk.ts",[],[],"/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/lang-switcher/index.tsx",["264","265","266"],[],"import i18next from 'i18next';\nimport React, { useEffect, useState, FC, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next';\nimport LangService from '../../api/services/lang';\n\nimport AppContext from '../../store/context/app';\n\nimport Button from '../button';\n\nimport './lang-switcher.scss';\n\nconst menuItems = [\n  {\n    label: '🇺🇦',\n    value: 'uk'\n  },\n  {\n    label: '🇬🇧',\n    value: 'en'\n  }\n];\n\ntype LanguageSwitcherProps = {\n  sendToServer?: boolean,\n  onChangeCallback?: (lang: string) => void;\n};\n\nconst LanguageSwitcher: FC<LanguageSwitcherProps> = ({ sendToServer, onChangeCallback }) => {\n  const { data: { user: { id }, language }, setData: setAppData } = AppContext.useContext();\n\n  const { t, i18n } = useTranslation();\n\n  const onLanguageChange = useCallback(() => (lang: string) => {\n    if (onChangeCallback) onChangeCallback(lang);\n\n    i18n.changeLanguage(lang);\n\n    setAppData({ language: lang });\n\n    if (sendToServer) {\n      LangService.updateLang(id! || localStorage.getItem('userId')!, lang)\n        .then(res => {\n          setAppData({ language: res.data.language || 'en' });\n        });\n    }\n  }, [id])();\n\n  const getLanguage = () => i18next.language || window.localStorage.i18nextLng;\n\n  useEffect(() => {\n    const lang = getLanguage();\n    const menuItem = menuItems.find(el => el.value === lang) || menuItems[1];\n\n    setAppData({ language: menuItem.value });\n  }, [language]);\n\n  return (\n    <section className='lang'>\n      <h5 className='lang__title'>{t('lang.title')}</h5>\n      { menuItems.map(item => (\n        <Button key={item.value} isActive={item.value === language} view='ghost' type='button' onClick={() => onLanguageChange(item.value)}>\n          {item.label}\n        </Button>\n      )) }\n    </section>\n  )\n};\n\nexport default LanguageSwitcher;","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/api/services/lang.ts",["267"],[],"import { AxiosResponse } from \"axios\";\nimport { RegisterUser, UserData } from \"../../types\";\n\nimport api  from './../';\n\nexport default class LangService {\n  static updateLang = (id: string, language: string): Promise<AxiosResponse<RegisterUser>> => {\n    return api.post('/lang', {\n      params: { id },\n      data: { language }\n    });\n  }\n}","/Users/pc/KolomoyetsProjects/Study/project-zigzag/zigzag/client/src/components/onboarding/index.tsx",[],[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"276","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":18},{"ruleId":"272","severity":1,"message":"277","line":5,"column":25,"nodeType":"274","messageId":"275","endLine":5,"endColumn":41},{"ruleId":"272","severity":1,"message":"278","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":13},{"ruleId":"272","severity":1,"message":"279","line":51,"column":20,"nodeType":"274","messageId":"275","endLine":51,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":126,"column":6,"nodeType":"282","endLine":126,"endColumn":17,"suggestions":"283","suppressions":"284"},{"ruleId":"272","severity":1,"message":"285","line":16,"column":10,"nodeType":"274","messageId":"275","endLine":16,"endColumn":17},{"ruleId":"272","severity":1,"message":"286","line":26,"column":30,"nodeType":"274","messageId":"275","endLine":26,"endColumn":38},{"ruleId":"272","severity":1,"message":"287","line":21,"column":5,"nodeType":"274","messageId":"275","endLine":21,"endColumn":15},{"ruleId":"272","severity":1,"message":"288","line":22,"column":5,"nodeType":"274","messageId":"275","endLine":22,"endColumn":10},{"ruleId":"272","severity":1,"message":"289","line":23,"column":5,"nodeType":"274","messageId":"275","endLine":23,"endColumn":13},{"ruleId":"280","severity":1,"message":"290","line":46,"column":6,"nodeType":"282","endLine":46,"endColumn":10,"suggestions":"291","suppressions":"292"},{"ruleId":"272","severity":1,"message":"293","line":1,"column":41,"nodeType":"274","messageId":"275","endLine":1,"endColumn":47},{"ruleId":"294","severity":1,"message":"295","line":16,"column":5,"nodeType":"296","messageId":"297","endLine":16,"endColumn":54,"suppressions":"298"},{"ruleId":"299","severity":1,"message":"300","line":26,"column":36,"nodeType":"301","messageId":"302","endLine":26,"endColumn":38},{"ruleId":"299","severity":1,"message":"300","line":44,"column":30,"nodeType":"301","messageId":"302","endLine":44,"endColumn":32},{"ruleId":"280","severity":1,"message":"303","line":18,"column":13,"nodeType":"304","endLine":20,"endColumn":13,"suppressions":"305"},{"ruleId":"272","severity":1,"message":"306","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":21},{"ruleId":"272","severity":1,"message":"307","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":19},{"ruleId":"299","severity":1,"message":"308","line":22,"column":19,"nodeType":"301","messageId":"302","endLine":22,"endColumn":21},{"ruleId":"299","severity":1,"message":"308","line":22,"column":50,"nodeType":"301","messageId":"302","endLine":22,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":36,"column":29,"nodeType":"301","messageId":"302","endLine":36,"endColumn":31},{"ruleId":"280","severity":1,"message":"309","line":206,"column":6,"nodeType":"282","endLine":206,"endColumn":32,"suggestions":"310"},{"ruleId":"280","severity":1,"message":"311","line":209,"column":65,"nodeType":"282","endLine":209,"endColumn":95,"suggestions":"312"},{"ruleId":"272","severity":1,"message":"313","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":12},{"ruleId":"272","severity":1,"message":"314","line":1,"column":14,"nodeType":"274","messageId":"275","endLine":1,"endColumn":21},{"ruleId":"272","severity":1,"message":"306","line":1,"column":14,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"315","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"316","line":1,"column":38,"nodeType":"274","messageId":"275","endLine":1,"endColumn":46},{"ruleId":"272","severity":1,"message":"317","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":23},{"ruleId":"272","severity":1,"message":"276","line":3,"column":25,"nodeType":"274","messageId":"275","endLine":3,"endColumn":35},{"ruleId":"272","severity":1,"message":"316","line":2,"column":28,"nodeType":"274","messageId":"275","endLine":2,"endColumn":36},{"ruleId":"280","severity":1,"message":"318","line":46,"column":6,"nodeType":"282","endLine":46,"endColumn":10,"suggestions":"319"},{"ruleId":"280","severity":1,"message":"320","line":55,"column":6,"nodeType":"282","endLine":55,"endColumn":16,"suggestions":"321"},{"ruleId":"272","severity":1,"message":"322","line":2,"column":24,"nodeType":"274","messageId":"275","endLine":2,"endColumn":32},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Transition' is defined but never used.","'SwitchTransition' is defined but never used.","'Input' is defined but never used.","'setSummaryData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'i18n', 'navigate', 'setAppData', and 'setStatsData'. Either include them or remove the dependency array.","ArrayExpression",["325"],["326"],"'Locales' is defined but never used.","'language' is assigned a value but never used.","'totalGames' is assigned a value but never used.","'moves' is assigned a value but never used.","'bestGame' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate', 'setStatsData', and 'token'. Either include them or remove the dependency array.",["327"],["328"],"'useRef' is defined but never used.","react/jsx-pascal-case","Imported JSX component context must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase",["329"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["330"],"'useCallback' is defined but never used.","'AuthService' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'onCellClick' and 'setGameData'. Either include them or remove the dependency array.",["331"],"React Hook useMemo has unnecessary dependencies: 'lastTry' and 'lastTryField'. Either exclude them or remove the dependency array.",["332"],"'Logo' is defined but never used.","'useMemo' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'CSSTransition' is defined but never used.","React Hook useCallback has missing dependencies: 'i18n', 'onChangeCallback', 'sendToServer', and 'setAppData'. Either include them or remove the dependency array. If 'onChangeCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["333"],"React Hook useEffect has a missing dependency: 'setAppData'. Either include it or remove the dependency array.",["334"],"'UserData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"kind":"337","justification":"338"},{"desc":"339","fix":"340"},{"kind":"337","justification":"338"},{"kind":"337","justification":"338"},{"kind":"337","justification":"338"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [i18n, id, navigate, setAppData, setStatsData, token]",{"range":"349","text":"350"},"directive","","Update the dependencies array to be: [id, navigate, setStatsData, token]",{"range":"351","text":"352"},"Update the dependencies array to be: [fieldSize, disabledCells, setGameData, onCellClick]",{"range":"353","text":"354"},"Update the dependencies array to be: [field]",{"range":"355","text":"356"},"Update the dependencies array to be: [i18n, id, onChangeCallback, sendToServer, setAppData]",{"range":"357","text":"358"},"Update the dependencies array to be: [language, setAppData]",{"range":"359","text":"360"},[3552,3563],"[i18n, id, navigate, setAppData, setStatsData, token]",[1288,1292],"[id, navigate, setStatsData, token]",[5355,5381],"[fieldSize, disabledCells, setGameData, onCellClick]",[5506,5536],"[field]",[1154,1158],"[i18n, id, onChangeCallback, sendToServer, setAppData]",[1427,1437],"[language, setAppData]"]