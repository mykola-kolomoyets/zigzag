{"ast":null,"code":"import _objectSpread from\"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Provider=function Provider(_ref){var children=_ref.children,initialState=_ref.initialState,ContextComponent=_ref.ContextComponent;var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var updateData=function updateData(newData){return setData(function(prev){return _objectSpread(_objectSpread({},prev),newData);});};var value={data:data,setData:updateData};return/*#__PURE__*/ (// eslint-disable-next-line react/jsx-pascal-case\n_jsx(ContextComponent.context.Provider,{value:value,children:children}));};export default Provider;","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/store/provider/provider.tsx"],"names":["useState","Provider","children","initialState","ContextComponent","data","setData","updateData","newData","prev","value"],"mappings":"yTAAA,OAASA,QAAT,KAAyB,OAAzB,C,2CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAgF,IAA7DC,CAAAA,QAA6D,MAA7DA,QAA6D,CAAnDC,YAAmD,MAAnDA,YAAmD,CAArCC,gBAAqC,MAArCA,gBAAqC,CAC/F,cAAwBJ,QAAQ,CAAIG,YAAJ,CAAhC,wCAAOE,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAA4BF,CAAAA,OAAO,CAAC,SAACG,IAAD,wCAAgBA,IAAhB,EAAyBD,OAAzB,GAAD,CAAnC,EAAnB,CAEA,GAAME,CAAAA,KAAK,CAAG,CACZL,IAAI,CAAJA,IADY,CAEZC,OAAO,CAAEC,UAFG,CAAd,CAKA,oBACE;AACA,KAAC,gBAAD,CAAkB,OAAlB,CAA0B,QAA1B,EAAmC,KAAK,CAAEG,KAA1C,UACIR,QADJ,EAFF,EAMD,CAhBD,CAkBA,cAAeD,CAAAA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport { IProvider, UpdateData } from \"../../utils\";\n\nconst Provider = <T extends {}, >({ children, initialState, ContextComponent }: IProvider<T>) => {\n  const [data, setData] = useState<T>(initialState);\n\n  const updateData = (newData: UpdateData<T>) => setData((prev) => ({ ...prev, ...newData }));\n\n  const value = {\n    data,\n    setData: updateData\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-pascal-case\n    <ContextComponent.context.Provider value={value}>\n      { children }\n    </ContextComponent.context.Provider>\n  );\n};\n\nexport default Provider;"]},"metadata":{},"sourceType":"module"}