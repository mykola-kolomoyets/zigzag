{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/timer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { formatSeconds } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = _ref => {\n  _s();\n\n  let {\n    isTicking\n  } = _ref;\n  const [time, setTime] = useState(0); // const { data: { bestGame }, setData } = StatsContext.useContext();\n\n  let timer;\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    timer = setInterval(() => {\n      setTime(prev => prev + 1);\n    }, 1000);\n    return () => {\n      // setData({\n      //   bestGame: {\n      //     ...bestGame,\n      //     time\n      //   }\n      // });\n      clearInterval(timer);\n    };\n  }, [isTicking]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatSeconds(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this), \" seconds \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/timer/index.tsx"],"names":["useEffect","useState","formatSeconds","Timer","isTicking","time","setTime","timer","setInterval","prev","clearInterval"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,SAASC,aAAT,QAA8B,aAA9B;;;AAKA,MAAMC,KAAqB,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC,CAD+C,CAG/C;;AAEA,MAAIM,KAAJ;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,KAAK,GAAGC,WAAW,CAAC,MAAM;AACxBF,MAAAA,OAAO,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAP;AACD,KAFkB,EAEhB,IAFgB,CAAnB;AAKA,WAAO,MAAM;AACX;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KARD;AASD,GAhBQ,EAgBN,CAACH,SAAD,CAhBM,CAAT;AAmBA,sBACE;AAAA,2BACE;AAAA,wCAAS;AAAA,kBAAQF,aAAa,CAACG,IAAD;AAArB;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BD;;GAAMF,K;;KAAAA,K;AAiCN,eAAeA,KAAf","sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport StatsContext from \"../../store/context/stats\";\nimport { formatSeconds } from \"../../utils\";\n\ntype TimerProps = {\n  isTicking: boolean;\n}\nconst Timer: FC<TimerProps> = ({ isTicking }) => {\n  const [time, setTime] = useState(0);\n\n  // const { data: { bestGame }, setData } = StatsContext.useContext();\n\n  let timer: NodeJS.Timer;\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    timer = setInterval(() => {\n      setTime(prev => prev + 1);\n    }, 1000);\n\n\n    return () => {\n      // setData({\n      //   bestGame: {\n      //     ...bestGame,\n      //     time\n      //   }\n      // });\n      clearInterval(timer);\n    }\n  }, [isTicking]);\n\n\n  return (\n    <section>\n      <p>time: <span>{ formatSeconds(time) }</span> seconds </p>\n    </section>\n  )\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}