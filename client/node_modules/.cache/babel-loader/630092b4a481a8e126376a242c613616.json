{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/game/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from \"react\";\nimport Row from \"../../components/row\";\nimport GameContext from \"../../store/context/game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const {\n    data: {\n      fieldSize,\n      field,\n      currentNumber\n    },\n    setData: setGameData\n  } = GameContext.useContext();\n\n  const checkRow = (content, row, column, field, lastTry) => {\n    let isAllowedToGo = true;\n\n    if (lastTry.row != undefined && lastTry.column != undefined) {\n      const deltaX = Math.abs(column - lastTry.column);\n      const deltaY = Math.abs(row - lastTry.row);\n      isAllowedToGo = Number(content) === 0 && (deltaX === 2 && deltaY === 1 || deltaX === 1 && deltaY === 2);\n    }\n\n    return isAllowedToGo;\n  };\n\n  const onCellClick = (row, column, field, lastTry) => {\n    const fieldCopy = field.slice();\n    console.log(lastTry.moves);\n    const nextNumber = lastTry !== null && lastTry !== void 0 && lastTry.number ? Number(fieldCopy[lastTry.row][lastTry.column]) + 1 : 1;\n    fieldCopy[row][column] = nextNumber.toString();\n    console.log(fieldCopy, row, column, currentNumber);\n    setGameData({\n      field: fieldCopy,\n      lastTry: {\n        row,\n        column,\n        number: nextNumber,\n        moves: lastTry.moves + 1\n      }\n    });\n  };\n\n  useEffect(() => {\n    const field = Array(fieldSize.width).fill('0').map(() => Array(fieldSize.height).fill('0'));\n    setGameData({\n      field,\n      onCellClick\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fieldSize]);\n  const rows = useCallback(() => field.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n    content: row,\n    number: index\n  }, `row${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)), [field])();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"4VivoltJhLoQNrrbXxecwTMoEiQ=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/game/index.tsx"],"names":["useCallback","useEffect","Row","GameContext","Game","data","fieldSize","field","currentNumber","setData","setGameData","useContext","checkRow","content","row","column","lastTry","isAllowedToGo","undefined","deltaX","Math","abs","deltaY","Number","onCellClick","fieldCopy","slice","console","log","moves","nextNumber","number","toString","Array","width","fill","map","height","rows","index"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, VFC } from \"react\";\n\nimport Row from \"../../components/row\";\n\nimport GameContext, { Try } from \"../../store/context/game\";\n\nconst Game: VFC = () => {\n\n  const { data: {\n    fieldSize,\n    field,\n    currentNumber\n  }, setData: setGameData } = GameContext.useContext();\n\n  const checkRow = (content: string, row: number, column: number, field: string[][], lastTry: Try): boolean => {\n    let isAllowedToGo = true;\n\n    if (lastTry.row != undefined && lastTry.column != undefined) {\n      const deltaX = Math.abs(column - lastTry.column);\n      const deltaY = Math.abs(row - lastTry.row);\n\n      isAllowedToGo = Number(content) === 0 && (\n        ((deltaX === 2) && (deltaY === 1)) ||\n        ((deltaX === 1) && (deltaY === 2)));\n    }\n\n    return isAllowedToGo;\n  }\n\n  const onCellClick = (row: number, column: number, field: string[][], lastTry: Try) => {\n    const fieldCopy = field.slice();\n\n    console.log(lastTry.moves);\n\n    const nextNumber = (lastTry?.number) ?\n      Number(fieldCopy[lastTry.row!][lastTry.column!]) + 1 :\n      1;\n\n    fieldCopy[row][column] = nextNumber.toString();\n\n\n\n    console.log(fieldCopy, row, column, currentNumber);\n\n    setGameData({\n      field: fieldCopy,\n      lastTry: {\n        row,\n        column,\n        number: nextNumber,\n        moves: lastTry.moves + 1\n      }\n    });\n  };\n\n  useEffect(() => {\n    const field = Array(fieldSize.width).fill('0').map(() => Array(fieldSize.height).fill('0'));\n\n    setGameData({\n      field,\n      onCellClick\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fieldSize]);\n\n\n  const rows = useCallback(() => field.map((row, index) => (\n    <Row key={`row${index}`} content={row} number={index} />))\n    , [field])();\n\n  return (\n    <section>\n      {rows}\n    </section>\n  )\n};\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}