{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/register/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Input from './../../components/input';\nimport Button from './../../components/button';\nimport AuthService from '../../api/services/auth';\nimport AppContext from '../../store/context/app';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const nameRef = useRef(null);\n  const emailRef = useRef(null);\n  const PasswordRef = useRef(null);\n  const {\n    data: {\n      isLoading\n    },\n    setData: setAppData\n  } = AppContext.useContext();\n  const navigate = useNavigate();\n\n  const onSubmit = event => {\n    if (event) event.preventDefault();\n    const [name, email, password] = [nameRef, emailRef, PasswordRef].map(ref => {\n      var _ref$current;\n\n      return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.value;\n    });\n    setAppData({\n      isLoading: true\n    });\n    AuthService.register({\n      name: name,\n      email: email,\n      password: password\n    }).then(res => {\n      const {\n        token,\n        user\n      } = res.data;\n      setAppData({\n        user,\n        token\n      });\n    }).then(() => navigate('/login')).catch(err => {\n      console.log(err);\n    }).finally(() => setAppData({\n      isLoading: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"register__contaner\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"register__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"name\",\n          placeholder: \"Enter name\",\n          ref: nameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          placeholder: \"Enter email\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          placeholder: \"Enter password\",\n          ref: PasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isLoading,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [\"Not registered?\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"2s7xC114eMSsxierw4+2Ti8bPXM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/register/index.tsx"],"names":["React","useRef","Input","Button","AuthService","AppContext","useNavigate","Link","Register","nameRef","emailRef","PasswordRef","data","isLoading","setData","setAppData","useContext","navigate","onSubmit","event","preventDefault","name","email","password","map","ref","current","value","register","then","res","token","user","catch","err","console","log","finally"],"mappings":"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","sourcesContent":["import React, { FormEvent, useRef, VFC } from 'react';\n\nimport Input from './../../components/input';\nimport Button from './../../components/button';\nimport AuthService from '../../api/services/auth';\nimport AppContext from '../../store/context/app';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst Register: VFC = () => {\n  const nameRef = useRef<HTMLInputElement>(null);\n  const emailRef = useRef<HTMLInputElement>(null);\n  const PasswordRef = useRef<HTMLInputElement>(null);\n\n  const { data: { isLoading }, setData: setAppData } = AppContext.useContext();\n\n  const navigate = useNavigate();\n\n  const onSubmit = (event: FormEvent) => {\n    if (event) event.preventDefault();\n\n    const [\n      name,\n      email,\n      password\n    ] = [nameRef, emailRef, PasswordRef].map(ref => ref.current?.value);\n\n    setAppData({ isLoading: true });\n\n    AuthService.register({\n      name: name!,\n      email: email!,\n      password: password!\n    })\n    .then(res => {\n      const { token, user } = res.data;\n\n      setAppData({\n        user,\n        token\n      });\n    })\n    .then(() => navigate('/login'))\n    .catch(err => {\n      console.log(err);\n\n    })\n    .finally(() => setAppData({ isLoading: false }));\n  }\n  return (\n    <section className=\"register__contaner\">\n      <section className=\"register__content\">\n        <h2>Register</h2>\n\n        <form onSubmit={onSubmit}>\n          <Input name='name' placeholder='Enter name' ref={nameRef}/>\n          <Input name='email' placeholder='Enter email' ref={emailRef}/>\n          <Input name='password' placeholder='Enter password' ref={PasswordRef}/>\n\n          <Button disabled={isLoading}>\n            Register\n          </Button>\n        </form>\n\n        <section>\n            Not registered?&nbsp;\n            <Link to='/login'>Login</Link>\n        </section>\n      </section>\n    </section>\n  )\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}