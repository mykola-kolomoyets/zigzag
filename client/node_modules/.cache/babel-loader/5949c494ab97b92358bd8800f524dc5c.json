{"ast":null,"code":"import _asyncToGenerator from\"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect}from\"react\";import StatsService from\"../../api/services/stats\";import Row from\"../../components/row\";import AppContext from\"../../store/context/app\";import GameContext from\"../../store/context/game\";import StatsContext from\"../../store/context/stats\";import SummaryContext from\"../../store/context/summary\";import{jsx as _jsx}from\"react/jsx-runtime\";export var checkRow=function checkRow(content,row,column,field,lastTry){var isAllowedToGo=true;if(lastTry.row!=undefined&&lastTry.column!=undefined){var deltaX=Math.abs(column-lastTry.column);var deltaY=Math.abs(row-lastTry.row);isAllowedToGo=Number(content)===0&&(deltaX===2&&deltaY===1||deltaX===1&&deltaY===2);}return isAllowedToGo;};var getTotalAvaliableMoves=function getTotalAvaliableMoves(field,row,column){var avaliableMoves=[[2,1],[2,-1],[-2,1],[-2,-1],[1,2],[-1,2],[1,-2],[-1,-2]];var totalMoves=0;avaliableMoves.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),moveRows=_ref2[0],moveColumns=_ref2[1];var newRow=row+moveRows;var newColumn=column+moveColumns;if(newRow>=0&&newRow<field.length&&newColumn>=0&&newColumn<field[0].length){if(field[newRow][newColumn]==='0')totalMoves++;}});return totalMoves;};var checkWin=function checkWin(field){var isWin=field.reduce(function(acc,curr){return[].concat(_toConsumableArray(acc),[curr.some(function(el){return el==='0';})]);},[]).every(function(el){return!el;});return isWin;};var Game=function Game(_ref3){var onFinish=_ref3.onFinish;var _GameContext$useConte=GameContext.useContext(),_GameContext$useConte2=_GameContext$useConte.data,fieldSize=_GameContext$useConte2.fieldSize,field=_GameContext$useConte2.field,time=_GameContext$useConte2.time,setGameData=_GameContext$useConte.setData;var _AppContext$useContex=AppContext.useContext(),id=_AppContext$useContex.data.user._id,setAppData=_AppContext$useContex.setData;var _StatsContext$useCont=StatsContext.useContext(),setStatsData=_StatsContext$useCont.setData;var _SummaryContext$useCo=SummaryContext.useContext(),setSummaryData=_SummaryContext$useCo.setData;// const defaultField = useMemo(() => Array(fieldSize.width).fill('0').map(() => Array(fieldSize.height).fill('0')), [field, fieldSize]);\nvar onCellClick=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(row,column,field,lastTry){var fieldCopy,nextNumber,availableMoves;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fieldCopy=field.slice();nextNumber=lastTry!==null&&lastTry!==void 0&&lastTry.number?Number(fieldCopy[lastTry.row][lastTry.column])+1:1;fieldCopy[row][column]=nextNumber.toString();setGameData({field:fieldCopy,lastTry:{row:row,column:column,number:nextNumber,moves:lastTry.moves+1}});availableMoves=getTotalAvaliableMoves(fieldCopy,row,column);if(!(availableMoves===0)){_context.next=13;break;}_context.next=8;return setSummaryData({isShow:true,isSuccess:true,title:'Game Over',subtitle:checkWin(field)?'YOU WIN!':'YOU LOSE!'});case 8:onFinish();setGameData({lastTry:{row:null,column:null,number:0,moves:0}});// === TODO:\n// === PUSH results of lastGame on the server\nsetAppData({isLoading:true});_context.next=13;return StatsService.update(id,{moves:lastTry.moves+1,bestGame:{time:time,field:{width:field[0].length,height:field.length}}}).then(function(res){var data=res.data;console.log(data);setStatsData(data);}).finally(function(){return setAppData({isLoading:false});});case 13:case\"end\":return _context.stop();}}},_callee);}));return function onCellClick(_x,_x2,_x3,_x4){return _ref4.apply(this,arguments);};}();useEffect(function(){var field=Array(fieldSize.width).fill('0').map(function(){return Array(fieldSize.height).fill('0');});setGameData({field:field,onCellClick:onCellClick,lastTry:{row:null,column:null,number:0,moves:0}});// eslint-disable-next-line react-hooks/exhaustive-deps\nsetGameData({onCellClick:onCellClick});},[fieldSize]);var rows=field.map(function(row,index){return/*#__PURE__*/_jsx(Row,{content:row,number:index},\"row\".concat(index));});return/*#__PURE__*/_jsx(\"section\",{children:rows});};export default Game;","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/game/index.tsx"],"names":["useEffect","StatsService","Row","AppContext","GameContext","StatsContext","SummaryContext","checkRow","content","row","column","field","lastTry","isAllowedToGo","undefined","deltaX","Math","abs","deltaY","Number","getTotalAvaliableMoves","avaliableMoves","totalMoves","forEach","moveRows","moveColumns","newRow","newColumn","length","checkWin","isWin","reduce","acc","curr","some","el","every","Game","onFinish","useContext","data","fieldSize","time","setGameData","setData","id","user","_id","setAppData","setStatsData","setSummaryData","onCellClick","fieldCopy","slice","nextNumber","number","toString","moves","availableMoves","isShow","isSuccess","title","subtitle","isLoading","update","bestGame","width","height","then","res","console","log","finally","Array","fill","map","rows","index"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, FC, useMemo } from \"react\";\nimport StatsService from \"../../api/services/stats\";\n\nimport Row from \"../../components/row\";\nimport AppContext from \"../../store/context/app\";\n\nimport GameContext from \"../../store/context/game\";\nimport StatsContext from \"../../store/context/stats\";\nimport SummaryContext from \"../../store/context/summary\";\nimport { Try } from \"../../utils\";\n\nexport const checkRow = (content: string, row: number, column: number, field: string[][], lastTry: Try): boolean => {\n  let isAllowedToGo = true;\n\n  if (lastTry.row != undefined && lastTry.column != undefined) {\n    const deltaX = Math.abs(column - lastTry.column);\n    const deltaY = Math.abs(row - lastTry.row);\n\n    isAllowedToGo = Number(content) === 0 && (\n      ((deltaX === 2) && (deltaY === 1)) ||\n      ((deltaX === 1) && (deltaY === 2)));\n  }\n\n  return isAllowedToGo;\n}\n\nconst getTotalAvaliableMoves = (field: string[][], row: number, column: number): number => {\n  const avaliableMoves = [\n    [2, 1],\n    [2, -1],\n    [-2, 1],\n    [-2, -1],\n\n    [1, 2],\n    [-1, 2],\n    [1, -2],\n    [-1, -2],\n  ];\n\n  let totalMoves = 0;\n\n  avaliableMoves.forEach(([moveRows, moveColumns]) => {\n    const newRow = row! + moveRows;\n    const newColumn = column! + moveColumns;\n\n    if (\n      (newRow >= 0 && newRow < field.length) &&\n      (newColumn >= 0 && newColumn < field[0].length)\n    ) {\n      if (field[newRow][newColumn] === '0') totalMoves++;\n    }\n  });\n\n  return totalMoves;\n}\n\nconst checkWin = (field: string[][]): boolean => {\n  const isWin = field\n    .reduce((acc, curr) => [...acc, curr.some(el => el === '0')], [] as boolean[])\n    .every(el => !el);\n\n  return isWin;\n}\n\ntype GameProps = {\n  onFinish: () => void\n}\nconst Game: FC<GameProps> = ({ onFinish }) => {\n  const { data: {\n    fieldSize,\n    field,\n    time\n  }, setData: setGameData } = GameContext.useContext();\n  const { data: { user: { _id: id } }, setData: setAppData } = AppContext.useContext();\n  const { setData: setStatsData } = StatsContext.useContext();\n  const { setData: setSummaryData } = SummaryContext.useContext();\n\n  // const defaultField = useMemo(() => Array(fieldSize.width).fill('0').map(() => Array(fieldSize.height).fill('0')), [field, fieldSize]);\n\n  const onCellClick = async (row: number, column: number, field: string[][], lastTry: Try) => {\n    const fieldCopy = field.slice();\n\n    const nextNumber = (lastTry?.number) ?\n      Number(fieldCopy[lastTry.row!][lastTry.column!]) + 1 :\n      1;\n\n    fieldCopy[row][column] = nextNumber.toString();\n\n    setGameData({\n      field: fieldCopy,\n      lastTry: {\n        row,\n        column,\n        number: nextNumber,\n        moves: lastTry.moves + 1\n      }\n    });\n\n    const availableMoves = getTotalAvaliableMoves(fieldCopy, row, column);\n\n    if (availableMoves === 0) {\n      await setSummaryData(({\n        isShow: true,\n        isSuccess: true,\n        title: 'Game Over',\n        subtitle: checkWin(field) ? 'YOU WIN!' : 'YOU LOSE!'\n      }));\n\n      onFinish();\n\n      setGameData({\n        lastTry: {\n          row: null,\n          column: null,\n          number: 0,\n          moves: 0,\n        },\n      });\n\n      // === TODO:\n      // === PUSH results of lastGame on the server\n      setAppData({ isLoading: true });\n\n      await StatsService.update(id!, {\n        moves: lastTry.moves + 1,\n        bestGame: {\n          time,\n          field: {\n            width: field[0].length,\n            height: field.length\n          }\n        }\n      })\n        .then(res => {\n          const { data } = res;\n          console.log(data);\n          setStatsData(data);\n        })\n        .finally(() => setAppData({ isLoading: false }));\n    }\n  };\n\n  useEffect(() => {\n    const field = Array(fieldSize.width).fill('0').map(() => Array(fieldSize.height).fill('0'));\n\n    setGameData({\n      field,\n      onCellClick,\n      lastTry: {\n        row: null,\n        column: null,\n        number: 0,\n        moves: 0,\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    setGameData({ onCellClick });\n  }, [fieldSize]);\n\n  const rows = field.map((row, index) => (\n    <Row key={`row${index}`} content={row} number={index} />));\n\n  return (\n    <section>\n      {rows}\n    </section>\n  )\n};\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}