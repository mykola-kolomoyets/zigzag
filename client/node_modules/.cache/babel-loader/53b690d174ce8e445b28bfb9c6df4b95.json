{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/store/provider/provider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Provider = _ref => {\n  _s();\n\n  let {\n    children,\n    initialState,\n    ContextComponent\n  } = _ref;\n  const [data, setData] = useState(initialState);\n\n  const updateData = newData => setData(prev => ({ ...prev,\n    ...newData\n  }));\n\n  const value = {\n    data,\n    setData: updateData\n  };\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-pascal-case\n    _jsxDEV(ContextComponent.context.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Provider, \"Gbd2INNTLOH0haRP9UPHdVDIWK8=\");\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/store/provider/provider.tsx"],"names":["useState","Provider","children","initialState","ContextComponent","data","setData","updateData","newData","prev","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,QAAQ,GAAG,QAAgF;AAAA;;AAAA,MAA/D;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,GAA+D;AAC/F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAIG,YAAJ,CAAhC;;AAEA,QAAMI,UAAU,GAAIC,OAAD,IAA4BF,OAAO,CAAEG,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAAGD;AAAd,GAAX,CAAD,CAAtD;;AAEA,QAAME,KAAK,GAAG;AACZL,IAAAA,IADY;AAEZC,IAAAA,OAAO,EAAEC;AAFG,GAAd;AAKA;AAAA;AACE;AACA,YAAC,gBAAD,CAAkB,OAAlB,CAA0B,QAA1B;AAAmC,MAAA,KAAK,EAAEG,KAA1C;AAAA,gBACIR;AADJ;AAAA;AAAA;AAAA;AAAA;AAFF;AAMD,CAhBD;;GAAMD,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport { IProvider, UpdateData } from \"../../utils\";\n\nconst Provider = <T extends {}, >({ children, initialState, ContextComponent }: IProvider<T>) => {\n  const [data, setData] = useState<T>(initialState);\n\n  const updateData = (newData: UpdateData<T>) => setData((prev) => ({ ...prev, ...newData }));\n\n  const value = {\n    data,\n    setData: updateData\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-pascal-case\n    <ContextComponent.context.Provider value={value}>\n      { children }\n    </ContextComponent.context.Provider>\n  );\n};\n\nexport default Provider;"]},"metadata":{},"sourceType":"module"}