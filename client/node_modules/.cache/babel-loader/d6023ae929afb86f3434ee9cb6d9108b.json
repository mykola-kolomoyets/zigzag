{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/cell/index.tsx\",\n    _s = $RefreshSig$();\n\nimport classnames from 'classnames';\nimport GameContext from \"../../store/context/game\";\nimport './cell.scss';\nimport { checkRow } from \"../../views/game\";\nimport AppContext from \"../../store/context/app\";\nimport { Difficulty } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cell = _ref => {\n  _s();\n\n  let {\n    content,\n    row,\n    column\n  } = _ref;\n  const {\n    data: {\n      onCellClick,\n      field,\n      lastTry\n    }\n  } = GameContext.useContext();\n  const {\n    data: {\n      difficulty\n    }\n  } = AppContext.useContext();\n  const isAllowedToGo = checkRow(content, row, column, field, lastTry);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames('cell__container', {\n      'cell__available': difficulty === Difficulty.easy && isAllowedToGo,\n      'cell__filled': Number(content) !== 0\n    }),\n    onClick: () => isAllowedToGo ? onCellClick(row, column, field, lastTry) : {},\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cell, \"nLY8nzB822H9hfJIBKWnJe+W0gI=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/cell/index.tsx"],"names":["classnames","GameContext","checkRow","AppContext","Difficulty","Cell","content","row","column","data","onCellClick","field","lastTry","useContext","difficulty","isAllowedToGo","easy","Number"],"mappings":";;;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAQA,MAAMC,IAAmB,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA;AAAhB,GAA6B;AACxD,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB;AAAR,MAA4CX,WAAW,CAACY,UAAZ,EAAlD;AACA,QAAM;AAAEJ,IAAAA,IAAI,EAAE;AAAEK,MAAAA;AAAF;AAAR,MAA2BX,UAAU,CAACU,UAAX,EAAjC;AAEA,QAAME,aAAa,GAAGb,QAAQ,CAACI,OAAD,EAAUC,GAAV,EAAeC,MAAf,EAAuBG,KAAvB,EAA8BC,OAA9B,CAA9B;AAEA,sBACE;AACE,IAAA,SAAS,EAAEZ,UAAU,CAAC,iBAAD,EAAoB;AACvC,yBAAmBc,UAAU,KAAKV,UAAU,CAACY,IAA1B,IAAkCD,aADd;AAEvC,sBAAgBE,MAAM,CAACX,OAAD,CAAN,KAAoB;AAFG,KAApB,CADvB;AAKE,IAAA,OAAO,EAAE,MAAMS,aAAa,GAAGL,WAAW,CAACH,GAAD,EAAMC,MAAN,EAAcG,KAAd,EAAqBC,OAArB,CAAd,GAA8C,EAL5E;AAAA,cAOGN;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAMD,I;;KAAAA,I;AAmBN,eAAeA,IAAf","sourcesContent":["import { FC } from \"react\";\nimport classnames from 'classnames';\n\nimport GameContext from \"../../store/context/game\";\n\nimport './cell.scss';\nimport { checkRow } from \"../../views/game\";\nimport AppContext from \"../../store/context/app\";\nimport { Difficulty } from \"../../utils\";\n\ntype CellProps = {\n  content: string;\n  column: number;\n  row: number;\n};\n\nconst Cell: FC<CellProps> = ({ content, row, column }) => {\n  const { data: { onCellClick, field, lastTry } } = GameContext.useContext();\n  const { data: { difficulty } } = AppContext.useContext();\n\n  const isAllowedToGo = checkRow(content, row, column, field, lastTry);\n\n  return (\n    <div\n      className={classnames('cell__container', {\n        'cell__available': difficulty === Difficulty.easy && isAllowedToGo,\n        'cell__filled': Number(content) !== 0\n      })}\n      onClick={() => isAllowedToGo ? onCellClick(row, column, field, lastTry) : {}}\n    >\n      {content}\n    </div>\n  )\n};\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}