{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { ReactNode } from \"react\";\n\nimport Context from \"../store/context/context\";\n\nimport { AlertType, Difficulty } from \"./enums\";\n\nexport interface IContext<T extends {}> {\n  data: T;\n  setData: (newData: UpdateData<T>) => void;\n}\n\nexport interface IProvider<T extends {}> {\n  initialState: T;\n  ContextComponent: Context<T>;\n  children: ReactNode;\n}\n\nexport type UpdateData<T> = {\n  [key in keyof Partial<T>]: T[keyof T];\n};\n\nexport type AppStore = {\n  isLoading: boolean;\n  showAlert: boolean;\n  difficulty: Difficulty;\n  alertType: AlertType;\n  alertText: string;\n  user: {\n    _id?: string;\n    id?: string;\n    name: string;\n    email: string;\n  };\n  token: string;\n};\n\n\nexport type Size = {\n  width: number\n  height: number;\n}\n\nexport type Try = {\n  row: number | null;\n  column: number | null;\n  number: number;\n  moves: number;\n}\n\nexport type GameStore = {\n  currentNumber: number;\n  lastTry: Try\n  time: number;\n  avaliableCells: number;\n  fieldSize: Size;\n  field: string[][];\n  onCellClick: (row: number, column: number, field: string[][], lastTry: Try) => void;\n};\n\nexport type StatsStore = {\n  id: string;\n  totalGames: number;\n  moves: number;\n  bestGame: {\n    time: number;\n    field: {\n      width: number;\n      height: number;\n    }\n  }\n};\n\nexport type SummaryStore = {\n  isShow: boolean;\n  isSuccess: boolean;\n  title: string;\n  subitle: string;\n}"]},"metadata":{},"sourceType":"module"}