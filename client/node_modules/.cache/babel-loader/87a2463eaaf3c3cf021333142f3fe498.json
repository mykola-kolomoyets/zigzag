{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/login/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthService from '../../api/services/auth';\nimport AppContext from '../../store/context/app';\nimport Button from '../../components/button';\nimport Input from '../../components/input';\nimport Logo from '../../components/logo';\nimport './login.scss';\nimport SummaryContext from '../../store/context/summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const emailRef = useRef(null);\n  const PasswordRef = useRef(null);\n  const {\n    data: {\n      isLoading\n    },\n    setData: setAppData\n  } = AppContext.useContext();\n  const {\n    setData: setSummaryData\n  } = SummaryContext.useContext();\n  const [loginError, setLoginError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n\n  const onSubmit = event => {\n    if (event) event.preventDefault();\n    const [email, password] = [emailRef, PasswordRef].map(ref => {\n      var _ref$current;\n\n      return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.value;\n    });\n    if (!email) setLoginError('Enter email or nickname');\n    if (!password) setPasswordError('Enter password');\n    setAppData({\n      isLoading: true\n    });\n    AuthService.login({\n      email: email,\n      password: password\n    }).then(res => {\n      const {\n        token,\n        user\n      } = res.data;\n      setAppData({\n        user,\n        token\n      });\n      localStorage.setItem('userId', user._id);\n      localStorage.setItem('AuthToken', token);\n    }).then(() => navigate('/main')).catch(err => {\n      console.log(err.response.message);\n      setSummaryData({\n        isShow: true,\n        isSuccess: false,\n        title: \"Something went wrong!\",\n        subtitle: err.response.data.message\n      });\n    }).finally(() => setAppData({\n      isLoading: false\n    }));\n  };\n\n  useEffect(() => {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('AuthToken');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login__container container\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login__content\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login__title\",\n        children: \"Hello Again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login__register\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Not registered?\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"login__register--link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"login__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"login__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            placeholder: \"Enter login or email\",\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            placeholder: \"Enter password\",\n            ref: PasswordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isLoading,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"aY5wCgNRzmIPcWwcKxb+O4lhhi8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/login/index.tsx"],"names":["React","useEffect","useRef","useState","Link","useNavigate","AuthService","AppContext","Button","Input","Logo","SummaryContext","Login","emailRef","PasswordRef","data","isLoading","setData","setAppData","useContext","setSummaryData","loginError","setLoginError","passwordError","setPasswordError","navigate","onSubmit","event","preventDefault","email","password","map","ref","current","value","login","then","res","token","user","localStorage","setItem","_id","catch","err","console","log","response","message","isShow","isSuccess","title","subtitle","finally","removeItem"],"mappings":"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","sourcesContent":["import React, { FormEvent, useEffect, useRef, useState, VFC } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport AuthService from '../../api/services/auth';\n\nimport AppContext from '../../store/context/app';\n\nimport Button from '../../components/button';\nimport Input from '../../components/input';\n\nimport Logo from '../../components/logo';\n\nimport './login.scss';\nimport SummaryContext from '../../store/context/summary';\n\nconst Login: VFC = () => {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const PasswordRef = useRef<HTMLInputElement>(null);\n\n  const { data: { isLoading }, setData: setAppData } = AppContext.useContext();\n  const { setData: setSummaryData } = SummaryContext.useContext();\n\n  const [loginError, setLoginError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const navigate = useNavigate();\n\n  const onSubmit = (event: FormEvent) => {\n    if (event) event.preventDefault();\n\n    const [\n      email,\n      password\n    ] = [emailRef, PasswordRef].map(ref => ref.current?.value);\n\n    if (!email) setLoginError('Enter email or nickname');\n    if (!password) setPasswordError('Enter password');\n\n    setAppData({ isLoading: true });\n\n    AuthService.login({\n      email: email!,\n      password: password!\n    })\n    .then(res => {\n      const { token, user } = res.data;\n\n      setAppData({ user, token });\n\n      localStorage.setItem('userId', user._id!);\n      localStorage.setItem('AuthToken', token);\n    })\n    .then(() => navigate('/main'))\n    .catch(err => {\n      console.log(err.response.message);\n\n      setSummaryData({\n        isShow: true,\n        isSuccess: false,\n        title: \"Something went wrong!\",\n        subtitle: err.response.data.message\n      });\n    })\n    .finally(() => setAppData({ isLoading: false }));\n  }\n\n  useEffect(() => {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('AuthToken');\n  }, []);\n\n  return (\n    <section className=\"login__container container\">\n      <section className=\"login__content\">\n        <Logo />\n\n        <h2 className='login__title'>Hello Again!</h2>\n\n        <section className='login__register'>\n          <span>Not registered?&nbsp;</span>\n          <Link className='login__register--link' to='/register'>Register</Link>\n        </section>\n\n        <form onSubmit={onSubmit} className='login__form'>\n          <section className='login__inputs'>\n            <Input name='email' placeholder='Enter login or email' ref={emailRef} />\n            <Input name='password' placeholder='Enter password' ref={PasswordRef} />\n          </section>\n\n          <section>\n            <Button disabled={isLoading}>\n              Login\n            </Button>\n          </section>\n\n        </form>\n\n      </section>\n    </section>\n  )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}