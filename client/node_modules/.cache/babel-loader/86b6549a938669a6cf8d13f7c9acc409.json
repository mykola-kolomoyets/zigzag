{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/row/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport Cell from \"../cell\";\nimport './row.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Row = _ref => {\n  _s();\n\n  let {\n    content,\n    number\n  } = _ref;\n  const cells = useMemo(() => content.map((item, index) => /*#__PURE__*/_jsxDEV(Cell, {\n    row: number,\n    column: index,\n    content: item\n  }, item + index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)), [content]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row__container\",\n    children: cells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Row, \"M1j72coUl7JyMTMKfnollIaW2jE=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/row/index.tsx"],"names":["useMemo","Cell","Row","content","number","cells","map","item","index"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,YAAP;;;AAOA,MAAMC,GAAiB,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAwB;AACjD,QAAMC,KAAK,GAAGL,OAAO,CAAC,MAAMG,OAAO,CAACG,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACtC,QAAC,IAAD;AAAyB,IAAA,GAAG,EAAEJ,MAA9B;AAAsC,IAAA,MAAM,EAAEI,KAA9C;AAAqD,IAAA,OAAO,EAAED;AAA9D,KAAWA,IAAI,GAAGC,KAAlB;AAAA;AAAA;AAAA;AAAA,UAD0B,CAAP,EAEjB,CAACL,OAAD,CAFiB,CAArB;AAGA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;GAAMH,G;;KAAAA,G;AAWN,eAAeA,GAAf","sourcesContent":["import { FC, useMemo } from \"react\";\n\nimport Cell from \"../cell\";\n\nimport './row.scss';\n\ntype RowProps = {\n  content: string[];\n  number: number;\n};\n\nconst Row: FC<RowProps> = ({ content, number }) => {\n  const cells = useMemo(() => content.map((item, index) => (\n    <Cell key={item + index} row={number} column={index} content={item} />\n  )), [content]);\n  return (\n    <section className='row__container'>\n      {cells}\n    </section>\n  )\n}\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}