{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/cell/index.tsx\",\n    _s = $RefreshSig$();\n\nimport classnames from 'classnames';\nimport GameContext from \"../../store/context/game\";\nimport './cell.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cell = _ref => {\n  _s();\n\n  let {\n    content,\n    row,\n    column\n  } = _ref;\n  const {\n    data: {\n      onCellClick,\n      field,\n      lastTry\n    }\n  } = GameContext.useContext();\n  let isAllowedToGo = true;\n\n  if (lastTry.row && lastTry.column) {\n    const deltaX = Math.abs(column - lastTry.column);\n    const deltaY = Math.abs(row - lastTry.row);\n    isAllowedToGo = deltaX === 2 && deltaY === 1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames('cell__container', {\n      'cell__available': isAllowedToGo\n    }),\n    onClick: () => isAllowedToGo ? onCellClick(row, column, field, lastTry) : {},\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cell, \"HISgfsvdrvEatMNwC9w0LsOF4zk=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/components/cell/index.tsx"],"names":["classnames","GameContext","Cell","content","row","column","data","onCellClick","field","lastTry","useContext","isAllowedToGo","deltaX","Math","abs","deltaY"],"mappings":";;;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,aAAP;;;AAQA,MAAMC,IAAmB,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA;AAAhB,GAA6B;AACxD,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB;AAAR,MAA4CR,WAAW,CAACS,UAAZ,EAAlD;AAEA,MAAIC,aAAa,GAAG,IAApB;;AAEA,MAAIF,OAAO,CAACL,GAAR,IAAeK,OAAO,CAACJ,MAA3B,EAAmC;AACjC,UAAMO,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAST,MAAM,GAAGI,OAAO,CAACJ,MAA1B,CAAf;AACA,UAAMU,MAAM,GAAGF,IAAI,CAACC,GAAL,CAASV,GAAG,GAAGK,OAAO,CAACL,GAAvB,CAAf;AAEAO,IAAAA,aAAa,GAAIC,MAAM,KAAK,CAAZ,IAAmBG,MAAM,KAAK,CAA9C;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAEf,UAAU,CAAC,iBAAD,EAAoB;AACvC,yBAAmBW;AADoB,KAApB,CADvB;AAIE,IAAA,OAAO,EAAE,MAAMA,aAAa,GAAGJ,WAAW,CAACH,GAAD,EAAMC,MAAN,EAAcG,KAAd,EAAqBC,OAArB,CAAd,GAA8C,EAJ5E;AAAA,cAMGN;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtBD;;GAAMD,I;;KAAAA,I;AAwBN,eAAeA,IAAf","sourcesContent":["import { FC } from \"react\";\nimport classnames from 'classnames';\n\nimport GameContext from \"../../store/context/game\";\n\nimport './cell.scss';\n\ntype CellProps = {\n  content: string;\n  column: number;\n  row: number;\n};\n\nconst Cell: FC<CellProps> = ({ content, row, column }) => {\n  const { data: { onCellClick, field, lastTry } } = GameContext.useContext();\n\n  let isAllowedToGo = true;\n\n  if (lastTry.row && lastTry.column) {\n    const deltaX = Math.abs(column - lastTry.column);\n    const deltaY = Math.abs(row - lastTry.row);\n\n    isAllowedToGo = (deltaX === 2) && (deltaY === 1);\n  }\n\n  return (\n    <div\n      className={classnames('cell__container', {\n        'cell__available': isAllowedToGo\n      })}\n      onClick={() => isAllowedToGo ? onCellClick(row, column, field, lastTry) : {}}\n    >\n      {content}\n    </div>\n  )\n};\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}