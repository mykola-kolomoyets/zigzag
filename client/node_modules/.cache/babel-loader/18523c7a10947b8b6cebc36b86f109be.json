{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/main/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport AuthService from \"../../api/services/auth\";\nimport Navigation from \"../../components/navbar\";\nimport AppContext from \"../../store/context/app\";\nimport StatsContext from \"../../store/context/stats\";\nimport Game from \"../game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const {\n    data: {\n      user: {\n        _id: id,\n        name\n      }\n    },\n    setData: setUserData\n  } = AppContext.useContext();\n  const {\n    data,\n    setData: setStatsData\n  } = StatsContext.useContext();\n  const {\n    data: gameData,\n    setData: setGameData\n  } = GameContext.useContext();\n  const [isStarted, setIsStarted] = useState(false);\n\n  const onStartGame = () => {\n    setIsStarted(true);\n  };\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = id || localStorage.getItem('userId');\n\n    if (userId) {\n      AuthService.getUser(userId).then(res => {\n        const {\n          user,\n          stats\n        } = res.data;\n        setUserData({\n          user\n        });\n        setStatsData({ ...stats\n        });\n      }).catch(err => {\n        navigate('/login');\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello, \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"UvhHLK5rVQ0n+bVfW7svcpzjuvs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/main/index.tsx"],"names":["useEffect","useState","useNavigate","AuthService","Navigation","AppContext","StatsContext","Game","Main","data","user","_id","id","name","setData","setUserData","useContext","setStatsData","gameData","setGameData","GameContext","isStarted","setIsStarted","onStartGame","navigate","userId","localStorage","getItem","getUser","then","res","stats","catch","err"],"mappings":";;;AAAA,SAASA,SAAT,EAAqCC,QAArC,QAA0D,OAA1D;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAGA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,IAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,GAAG,EAAEC,EAAP;AAAWC,QAAAA;AAAX;AAAR,KAAR;AAAqCC,IAAAA,OAAO,EAAEC;AAA9C,MAA8DV,UAAU,CAACW,UAAX,EAApE;AACA,QAAM;AAAEP,IAAAA,IAAF;AAAQK,IAAAA,OAAO,EAAEG;AAAjB,MAAkCX,YAAY,CAACU,UAAb,EAAxC;AACA,QAAM;AAAEP,IAAAA,IAAI,EAAES,QAAR;AAAkBJ,IAAAA,OAAO,EAAEK;AAA3B,MAA2CC,WAAW,CAACJ,UAAZ,EAAjD;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMsB,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAGtB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,MAAM,GAAGb,EAAE,IAAIc,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;;AAEA,QAAIF,MAAJ,EAAY;AACVtB,MAAAA,WAAW,CAACyB,OAAZ,CAAoBH,MAApB,EACGI,IADH,CACQC,GAAG,IAAI;AACX,cAAM;AAAEpB,UAAAA,IAAF;AAAQqB,UAAAA;AAAR,YAAkBD,GAAG,CAACrB,IAA5B;AAEAM,QAAAA,WAAW,CAAC;AAAEL,UAAAA;AAAF,SAAD,CAAX;AACAO,QAAAA,YAAY,CAAC,EAAE,GAAGc;AAAL,SAAD,CAAZ;AACD,OANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACdT,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,OATH;AAUD;AACF,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,4BAAYX,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA,6BAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjDD;;GAAML,I;UAWaN,W;;;KAXbM,I;AAmDN,eAAeA,IAAf","sourcesContent":["import { useEffect, useLayoutEffect, useState, VFC } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../api/services/auth\";\nimport StatsService from \"../../api/services/stats\";\nimport Button from \"../../components/button\";\nimport Navigation from \"../../components/navbar\";\nimport AppContext from \"../../store/context/app\";\nimport StatsContext from \"../../store/context/stats\";\nimport Game from \"../game\";\n\nconst Main: VFC = () => {\n  const { data: { user: { _id: id, name } }, setData: setUserData } = AppContext.useContext();\n  const { data, setData: setStatsData } = StatsContext.useContext();\n  const { data: gameData, setData: setGameData } = GameContext.useContext();\n\n  const [isStarted, setIsStarted] = useState(false);\n\n  const onStartGame = () => {\n    setIsStarted(true);\n  }\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userId = id || localStorage.getItem('userId');\n\n    if (userId) {\n      AuthService.getUser(userId!)\n        .then(res => {\n          const { user, stats } = res.data;\n\n          setUserData({ user });\n          setStatsData({ ...stats });\n        })\n        .catch((err) => {\n          navigate('/login');\n        });\n    }\n  }, []);\n\n  return (\n    <main>\n      <Navigation />\n\n      <h1>Hello, {name}</h1>\n\n      <section >\n\n        <Game />\n        {/* {isStarted ? (\n          <Game />\n        ) : (\n          <Button onClick={onStartGame}>\n            Play\n          </Button>\n        )} */}\n      </section>\n    </main>\n  )\n};\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}