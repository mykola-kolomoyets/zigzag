{"ast":null,"code":"var _jsxFileName = \"/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/game/index.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  const gameField = [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']];\n  const rows = gameField.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Game;\n\nconst Cell = _ref => {\n  let {\n    content\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Cell;\n\nconst Row = _ref2 => {\n  let {\n    content,\n    number\n  } = _ref2;\n  const cells = content.map((item, index) => /*#__PURE__*/_jsxDEV(Cell, {\n    row: number,\n    column: index,\n    content: item\n  }, item + index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: cells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Row;\nexport default Game;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Cell\");\n$RefreshReg$(_c3, \"Row\");","map":{"version":3,"sources":["/Users/pc/KolomoyetsProjects/Study/project-zigzag/project-zigzag/client/src/views/game/index.tsx"],"names":["Game","gameField","rows","map","row","index","Cell","content","Row","number","cells","item"],"mappings":";;;AAEA,MAAMA,IAAS,GAAG,MAAM;AACtB,QAAMC,SAAS,GAAG,CAChB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CADgB,EAEhB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAFgB,EAGhB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAHgB,EAIhB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAJgB,CAAlB;AAOA,QAAMC,IAAI,GAAGD,SAAS,CAACE,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,kBAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAA9B,CAAb;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;KAAML,I;;AAsBN,MAAMM,IAAmB,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC3C,sBACE;AAAA,cACIA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMD,I;;AAYN,MAAME,GAAiB,GAAG,SAAyB;AAAA,MAAxB;AAAED,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAwB;AACjD,QAAMC,KAAK,GAAGH,OAAO,CAACJ,GAAR,CAAY,CAACQ,IAAD,EAAON,KAAP,kBACxB,QAAC,IAAD;AAAyB,IAAA,GAAG,EAAEI,MAA9B;AAAsC,IAAA,MAAM,EAAEJ,KAA9C;AAAqD,IAAA,OAAO,EAAEM;AAA9D,KAAWA,IAAI,GAAGN,KAAlB;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAGA,sBACE;AAAA,cACGK;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;MAAMF,G;AAWN,eAAeR,IAAf","sourcesContent":["import { FC, VFC } from \"react\";\n\nconst Game: VFC = () => {\n  const gameField = [\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n  ];\n\n  const rows = gameField.map((row, index) => <Row />);\n\n  return (\n    <section>\n\n    </section>\n  )\n};\n\ntype CellProps = {\n  content: string;\n  column: number;\n  row: number;\n};\nconst Cell: FC<CellProps> = ({ content }) => {\n  return (\n    <div>\n      { content }\n    </div>\n  )\n}\n\ntype RowProps = {\n  content: string[];\n  number: number;\n};\nconst Row: FC<RowProps> = ({ content, number }) => {\n  const cells = content.map((item, index) => (\n    <Cell key={item + index} row={number} column={index} content={item}/>\n  ));\n  return (\n    <section>\n      {cells}\n    </section>\n  )\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}