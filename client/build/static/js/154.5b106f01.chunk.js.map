{"version":3,"file":"static/js/154.5b106f01.chunk.js","mappings":"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","sources":["api/index.ts","api/services/auth.ts","components/input/index.tsx","views/login/index.tsx"],"sourcesContent":["import axios from \"axios\";\n\nconst { REACT_APP_API_URL } = process.env;\n\nexport const defaultHeader = {\n    'Content-type': 'application/json'\n};\n\nexport const AuthHeader = () => ({\n    ...defaultHeader,\n    'Authorization': `Bearer ${localStorage.getItem('AuthToken')}`\n});\n\nexport default axios.create({\n  baseURL: REACT_APP_API_URL,\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\n","import { AxiosResponse } from \"axios\";\n\nimport { BaseUser, RegisterUser, RegisterUserResponse, LoginUserResponse, UserData } from '../../types';\n\nimport api  from './../';\n\nexport default class AuthService {\n  static register = (data: RegisterUser): Promise<AxiosResponse<RegisterUserResponse>> => {\n    return api.post('/auth/register', data);\n  }\n\n  static login = (data: BaseUser): Promise<AxiosResponse<LoginUserResponse>> => {\n    return api.post('/auth/login', data);\n  }\n\n  static getUser = (id: string): Promise<AxiosResponse<UserData>> => {\n    return api.get('/auth', {\n      params: { id },\n     });\n  }\n}","import React, { DetailedHTMLProps, InputHTMLAttributes, forwardRef } from 'react';\n\nimport './input.scss';\n\ntype AdditionalInputProps = {\n  errorMessage: string;\n}\n\ntype InputProps =\n  AdditionalInputProps &\n  DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\nconst Input = forwardRef<HTMLInputElement, InputProps>(({\n  name,\n  placeholder,\n  errorMessage,\n  ...props\n}, ref) => {\n  return (\n    <div className='input__container'>\n      <label htmlFor={name} >\n        <p>{placeholder}</p>\n        <input\n          className='input__field'\n          type=\"text\"\n          placeholder={placeholder}\n          ref={ref}\n          {...props}\n        />\n        { errorMessage ? (\n          <span className='input__error'>{ errorMessage }</span>\n        ) : null }\n      </label>\n    </div>\n  )\n})\n\nexport default Input;","import React, { ChangeEvent, FormEvent, useEffect, useState, VFC } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport AuthService from '../../api/services/auth';\n\nimport AppContext from '../../store/context/app';\n\nimport Button from '../../components/button';\nimport Input from '../../components/input';\n\nimport Logo from '../../components/logo';\n\nimport './login.scss';\nimport SummaryContext from '../../store/context/summary';\n\nconst Login: VFC = () => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [loginError, setLoginError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const { data: { isLoading }, setData: setAppData } = AppContext.useContext();\n  const { setData: setSummaryData } = SummaryContext.useContext();\n\n  const navigate = useNavigate();\n\n  const onLoginChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value);\n    setLoginError('');\n  }\n  const onPasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n    setPasswordError('');\n  }\n\n  const onSubmit = (event: FormEvent) => {\n    if (event) event.preventDefault();\n\n    if (!login) return setLoginError('Enter email or nickname');\n    if (!password) return setPasswordError('Enter password');\n\n    setAppData({ isLoading: true });\n\n    AuthService.login({\n      email: login,\n      password: password\n    })\n    .then(res => {\n      const { token, user } = res.data;\n\n      setAppData({ user, token });\n\n      localStorage.setItem('userId', user._id!);\n      localStorage.setItem('AuthToken', token);\n    })\n    .then(() => navigate('/main'))\n    .catch(err => {\n      console.log(err.response.message);\n\n      setPassword('');\n      setLogin('');\n\n      setSummaryData({\n        isShow: true,\n        isSuccess: false,\n        title: \"Something went wrong!\",\n        subtitle: err.response.data.message\n      });\n    })\n    .finally(() => setAppData({ isLoading: false }));\n  }\n\n  useEffect(() => {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('AuthToken');\n  }, []);\n\n  return (\n    <section className=\"login__container container\">\n      <section className=\"login__content\">\n        <Logo />\n\n        <h2 className='login__title'>Hello Again!</h2>\n\n        <section className='login__register'>\n          <span>Not registered?&nbsp;</span>\n          <Link className='login__register--link' to='/register'>Register</Link>\n        </section>\n\n        <form onSubmit={onSubmit} className='login__form'>\n          <section className='login__inputs'>\n            <Input\n              name='email'\n              placeholder='Enter login or email'\n              value={login}\n              onChange={onLoginChange}\n              errorMessage={loginError}\n            />\n            <Input\n              name='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={onPasswordChange}\n              errorMessage={passwordError}\n            />\n          </section>\n\n          <section>\n            <Button disabled={isLoading}>\n              Login\n            </Button>\n          </section>\n\n        </form>\n\n      </section>\n    </section>\n  )\n};\n\nexport default Login;"],"names":["axios","baseURL","process","headers","AuthService","register","data","api","login","getUser","id","params","forwardRef","ref","name","placeholder","errorMessage","props","className","htmlFor","type","useState","setLogin","password","setPassword","loginError","setLoginError","passwordError","setPasswordError","AppContext","isLoading","setAppData","setData","setSummaryData","SummaryContext","navigate","useNavigate","useEffect","localStorage","removeItem","to","onSubmit","event","preventDefault","email","then","res","token","user","setItem","_id","catch","err","console","log","response","message","isShow","isSuccess","title","subtitle","finally","value","onChange","target","disabled"],"sourceRoot":""}